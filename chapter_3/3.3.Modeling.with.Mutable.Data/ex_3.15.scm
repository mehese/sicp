#lang sicp

;      +-------+      +-------+
;x +-> | a | · |  +-> | b | · | +-> '()
;      +-------+      +-------+
(define x (list 'a 'b))

;       +---+---+      +---+---+
; x +-> | a | · |  +-> | b | · | +-> '()
;       +---+---+      +---+---+
;        ↑↑
;        |+---+
;        |    |
;       +---+---+
;z1 +-> | · | · |
;       +---+---+

(define z1 (cons x x))

;                     +---+---+     +---+---+
;         +---------->| a | · | +-> | b | · | +-> '()
;         |           +---+---+     +---+---+
;       +---+---+
;z2 +-> | · | · |
;       +---+---+
;             |       +---+---+     +---+---+
;             +------>| a | · | +-> | b | · | +-> '()
;                     +---+---+     +---+---+
(define z2 
  (cons (list 'a 'b) (list 'a 'b)))

(define (set-to-wow! x)
  (set-car! (car x) 'wow)
  x)

z1

;       +------+---+      +---+---+
; x +-> | 'wow | · |  +-> | b | · | +-> '()
;       +------+---+      +---+---+
;        ↑  ↑
;        |  +-+
;        |    |
;       +---+---+
;z1 +-> | · | · |
;       +---+---+
(set-to-wow! z1) ; {{wow b} wow b}
;; because (car z1) is x, and its car gets set to 'wow

z2

;                     +------+---+     +---+---+
;         +---------->| 'wow | · | +-> | b | · | +-> '()
;         |           +------+---+     +---+---+
;       +---+---+
;z2 +-> | · | · |
;       +---+---+
;             |       +---+---+     +---+---+
;             +------>| a | · | +-> | b | · | +-> '()
;                     +---+---+     +---+---+
(set-to-wow! z2) ; = {{wow b} a b}
;; because (car z1) an independent list '(a b) whose car gets changed to 'wow